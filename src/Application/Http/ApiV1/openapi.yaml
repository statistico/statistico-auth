openapi: 3.0.0
info:
  title: Statistico Auth API
  version: 1.0.0
servers:
  - url: https://auth.statistico.io/api/v1
paths:
  /user:
    post:
      tags:
        - User
      description: Create a new user resource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                  example: Joe
                lastName:
                  type: string
                  example: Sweeny
                email:
                  type: string
                  example: joe@statistico.io
                password:
                  type: string
                  example: secret-p@ssword!
      responses:
        201:
          description: A user resource is successfully created
          headers:
            Location:
              schema:
                type: string
                example: https://auth.statistico.io/api/v1/user/a1c62ffd-627c-45bb-9790-a9fd2965d554
              description: The url of the created user resource
        default:
          description: Default non 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  /user/{id}:
    get:
      tags:
        - User
      description: Retrieve a user resource
      parameters:
        - in: path
          name: id
          schema:
            $ref: '#/components/schemas/Uuid'
          required: true
          description: ID of the user resource
      responses:
        200:
          description: A user resource
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: object
                    properties:
                      user:
                        $ref: '#/components/schemas/User'
        default:
          description: Default non 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

  /user/{id}/bet-subscription:
    put:
      tags:
        - Proposed
      description: Create/update a bet subscription resource for a user
      parameters:
        - in: path
          name: id
          schema:
            $ref: '#/components/schemas/Uuid'
          required: true
          description: ID of the user resource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: array
                  items:
                    type: string
                    enum:
                      - OVER_UNDER_25
                exclude:
                  type: object
                  properties:
                    teams:
                      description: IDs of teams the user has requested NOT to bet on
                      type: array
                      items:
                        type: integer
                        example: 1234918
      responses:
        201:
          description: A bet subscription resource is successfully created
          headers:
            Location:
              schema:
                type: string
                example: https://auth.statistico.io/api/v1/user/a1c62ffd-627c-45bb-9790-a9fd2965d554/bet-subscription
              description: The url of the created bet subscription resource
        204:
          description: A bet subscription resource is successfully updated
        default:
          description: Default non 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'
    get:
      tags:
        - Proposed
      description: Retrieve a bet subscription resource for a user
      parameters:
        - in: path
          name: id
          schema:
            $ref: '#/components/schemas/Uuid'
          required: true
          description: ID of the user resource
      responses:
        200:
          description: A user resource
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: object
                    properties:
                      subscription:
                        $ref: '#/components/schemas/BetSubscription'
        default:
          description: Default non 200 response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardResponse'

components:
  schemas:
    User:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Uuid'
        firstName:
          type: string
          example: Joe
        lastName:
          type: string
          example: Sweeny
        email:
          type: string
          example: joe@statistico.io
        created_at:
          $ref: '#/components/schemas/Date'
        updated_at:
          $ref: '#/components/schemas/Date'
    BetSubscription:
      type: object
      properties:
        userId:
          $ref: '#/components/schemas/Uuid'
        type:
          type: array
          items:
            type: string
            enum:
              - OVER_UNDER_25
        exclude:
          type: object
          properties:
            teams:
              description: IDs of teams the user has requested NOT to bet on
              type: array
              items:
                type: integer
                example: 1234918
        created_at:
          $ref: '#/components/schemas/Date'
        updated_at:
          $ref: '#/components/schemas/Date'
    StandardResponse:
      type: object
      required:
        - status
        - data
      properties:
        status:
          type: string
          example: fail
          enum:
            - error
            - fail
        data:
          type: object
          properties:
            errors:
              type: array
              items:
                $ref: '#/components/schemas/Error'
    Error:
      type: object
      required:
        - message
        - code
      properties:
        message:
          type: string
          example: Something went wrong
          description: A human-readable description of the error
        code:
          type: integer
          example: 1
          description: >
            A code to identify the error. "1" is used when no specific error
            code has been defined for this error
    Date:
      type: string
      description: A date formatted to ISO 8601 specifications
      example: '2000-07-01T00:00:00+00:00'
    Uuid:
      type: string
      description: UUID using the v4 specification
      example: a1c62ffd-627c-45bb-9790-a9fd2965d554
